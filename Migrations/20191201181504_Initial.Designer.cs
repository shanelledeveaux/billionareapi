// <auto-generated />
using System;
using BillionareApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace billionareapi.Migrations
{
    [DbContext(typeof(BillionareContext))]
    [Migration("20191201181504_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("BillionareApi.Models.Billionare", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Description");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int>("NetWorth");

                    b.Property<int?>("PronounId");

                    b.HasKey("PersonId");

                    b.HasIndex("PronounId");

                    b.ToTable("Billionare");
                });

            modelBuilder.Entity("BillionareApi.Models.BillionareAccomplishment", b =>
                {
                    b.Property<int>("AccomplishmentId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BillionarePersonId");

                    b.Property<string>("Description");

                    b.Property<int>("Year");

                    b.HasKey("AccomplishmentId");

                    b.HasIndex("BillionarePersonId");

                    b.ToTable("BillionareAccomplishment");
                });

            modelBuilder.Entity("BillionareApi.Models.BillionareIncomeSource", b =>
                {
                    b.Property<int>("EmploymentId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BillionarePersonId");

                    b.Property<string>("Company");

                    b.Property<int?>("EndYear");

                    b.Property<string>("Job");

                    b.Property<string>("Notes");

                    b.Property<int?>("StartYear");

                    b.HasKey("EmploymentId");

                    b.HasIndex("BillionarePersonId");

                    b.ToTable("BillionareIncomeSource");
                });

            modelBuilder.Entity("BillionareApi.Models.Education", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("EndYear");

                    b.Property<string>("FieldOfStudy");

                    b.Property<string>("Institution");

                    b.Property<int>("LocationId");

                    b.Property<int>("PersonId");

                    b.Property<int?>("StartYear");

                    b.HasKey("EducationId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PersonId");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("BillionareApi.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryAbbreviation");

                    b.Property<string>("CountryCommonName");

                    b.Property<string>("CountryFullName");

                    b.Property<string>("MetroArea");

                    b.Property<string>("RegionAbbreviation");

                    b.Property<string>("RegionDescription");

                    b.HasKey("LocationId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("BillionareApi.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.Property<int>("Price");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BillionareApi.Models.Pronoun", b =>
                {
                    b.Property<int>("PronounId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Object");

                    b.Property<string>("Posessive");

                    b.Property<string>("Subject");

                    b.HasKey("PronounId");

                    b.ToTable("Pronoun");
                });

            modelBuilder.Entity("BillionareApi.Models.Billionare", b =>
                {
                    b.HasOne("BillionareApi.Models.Pronoun", "Pronoun")
                        .WithMany()
                        .HasForeignKey("PronounId");
                });

            modelBuilder.Entity("BillionareApi.Models.BillionareAccomplishment", b =>
                {
                    b.HasOne("BillionareApi.Models.Billionare", "Billionare")
                        .WithMany("BillionareAccomplishments")
                        .HasForeignKey("BillionarePersonId");
                });

            modelBuilder.Entity("BillionareApi.Models.BillionareIncomeSource", b =>
                {
                    b.HasOne("BillionareApi.Models.Billionare", "Billionare")
                        .WithMany("BillionareIncomeSources")
                        .HasForeignKey("BillionarePersonId");
                });

            modelBuilder.Entity("BillionareApi.Models.Education", b =>
                {
                    b.HasOne("BillionareApi.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BillionareApi.Models.Billionare", "Billionare")
                        .WithMany("Education")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
